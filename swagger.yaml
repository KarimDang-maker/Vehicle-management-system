openapi: 3.0.0
info:
  title: Vehicle Management System API
  description: API pour gérer une flotte de véhicules (CRUD complet)
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Serveur local

paths:
  /api/vehicles:
    get:
      summary: Récupérer tous les véhicules
      responses:
        '200':
          description: Liste des véhicules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'

    post:
      summary: Créer un nouveau véhicule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleInput'
      responses:
        '201':
          description: Véhicule créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'

  /api/vehicles/{id}:
    get:
      summary: Récupérer un véhicule par ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Véhicule trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: Véhicule non trouvé

    put:
      summary: Mettre à jour un véhicule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleInput'
      responses:
        '200':
          description: Véhicule mis à jour

    delete:
      summary: Supprimer un véhicule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Véhicule supprimé
        '404':
          description: Véhicule non trouvé

  /api/vehicles/search/immatriculation/{value}:
    get:
      summary: Rechercher un véhicule par numéro d'immatriculation
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
          description: Numéro d'immatriculation du véhicule (ex: AB-123-CD)
      responses:
        '200':
          description: Véhicule trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: Véhicule non trouvé
        '500':
          description: Erreur interne

  /api/vehicles/search/prix:
    get:
      summary: Rechercher des véhicules par prix maximum
      parameters:
        - name: max
          in: query
          required: true
          schema:
            type: number
          description: Prix maximum de location (ex: 40000)
      responses:
        '200':
          description: Liste des véhicules correspondant au critère de prix
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
        '400':
          description: Paramètre invalide
        '500':
          description: Erreur interne

components:
  schemas:
    Vehicle:
      type: object
      properties:
        id:
          type: integer
        marque:
          type: string
        model:
          type: string
        immatriculation:
          type: string
        annee:
          type: integer
        prixLocation:
          type: number
        disponible:
          type: boolean

    VehicleInput:
      type: object
      required:
        - marque
        - model
        - immatriculation
        - annee
        - prixLocation
      properties:
        marque:
          type: string
        model:
          type: string
        immatriculation:
          type: string
        annee:
          type: integer
        prixLocation:
          type: number
        disponible:
          type: boolean
